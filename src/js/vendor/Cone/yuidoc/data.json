{
    "project": {
        "name": "Cone.js",
        "description": "A little class to manage 3d cones in BabylonJS",
        "url": "http://labs.topheman.com/babylonjs"
    },
    "files": {
        "src\\js\\vendor\\Cone\\Cone.js": {
            "name": "src\\js\\vendor\\Cone\\Cone.js",
            "modules": {
                "Cone": 1
            },
            "classes": {
                "Cone": 1,
                "Cone.helpers": 1,
                "Cone.List": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "Cone": {
            "name": "Cone",
            "submodules": {},
            "classes": {
                "Cone": 1,
                "Cone.helpers": 1,
                "Cone.List": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 2026
        }
    },
    "classes": {
        "Cone": {
            "name": "Cone",
            "shortname": "Cone",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Cone",
            "namespace": "",
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 35,
            "description": "Manage 3d Cone with a simple API\n\nBased on BabylonJS",
            "is_constructor": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "",
                    "type": "BABYLON.Scene"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "name",
                            "description": "Name of the cone instance",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "moveStep",
                            "description": "How much the cone will move at each move call",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.1"
                        },
                        {
                            "name": "turnStep",
                            "description": "How much the cone will turn at each turn call (in rad)",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.1"
                        },
                        {
                            "name": "eyeSize",
                            "description": "Eye size",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.5"
                        },
                        {
                            "name": "color",
                            "description": "Color of the cone's sylinder (default : #900000) - can be in RGB or HEXA",
                            "type": "String|Object",
                            "optional": true
                        },
                        {
                            "name": "pickable",
                            "description": "Defines if the cone is pickable",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "$customOption",
                            "description": "Pass any custom option with a parameter's name starting by $",
                            "type": "Mixed",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "Cone"
            }
        },
        "Cone.helpers": {
            "name": "Cone.helpers",
            "shortname": "Cone.helpers",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Cone",
            "namespace": "",
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 1959,
            "description": "Bunch of methods I didn't find inside BabylonJS, that I coded for myself.\n Please tell me if they exist"
        },
        "Cone.List": {
            "name": "Cone.List",
            "shortname": "Cone.List",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Cone",
            "namespace": "",
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 2026,
            "description": "Management of Cone instances lists made easier\n\nInstance methods made available directly on the list, and lots of other things.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "coneList",
                    "description": "",
                    "type": "Array<Cone>|Cone"
                }
            ],
            "return": {
                "description": "",
                "type": "Cone.List"
            }
        }
    },
    "classitems": [
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 55,
            "description": "Original sizes",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_size",
            "type": "Object",
            "class": "Cone",
            "module": "Cone",
            "subprops": [
                {
                    "name": "topDiameter",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "bottomDiameter",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "",
                    "type": "Number"
                }
            ]
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 138,
            "description": "x postion of the cone in the space",
            "itemtype": "property",
            "name": "position.x",
            "type": "number",
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 143,
            "description": "y postion of the cone in the space",
            "itemtype": "property",
            "name": "position.y",
            "type": "number",
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 148,
            "description": "z postion of the cone in the space",
            "itemtype": "property",
            "name": "position.z",
            "type": "number",
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 183,
            "description": "x rotation of the cone in the space",
            "itemtype": "property",
            "name": "rotation.x",
            "type": "number",
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 188,
            "description": "y rotation of the cone in the space",
            "itemtype": "property",
            "name": "rotation.y",
            "type": "number",
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 193,
            "description": "z rotation of the cone in the space",
            "itemtype": "property",
            "name": "rotation.z",
            "type": "number",
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 228,
            "description": "x scaling of the cone",
            "itemtype": "property",
            "name": "scaling.x",
            "type": "number",
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 233,
            "description": "y scaling of the cone",
            "itemtype": "property",
            "name": "scaling.y",
            "type": "number",
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 238,
            "description": "z scaling of the cone",
            "itemtype": "property",
            "name": "scaling.z",
            "type": "number",
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 302,
            "description": "Launches the next callback in the queue then removes it from the queue",
            "itemtype": "method",
            "name": "dequeue",
            "params": [
                {
                    "name": "queueName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Cone"
            },
            "chainable": 1,
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 332,
            "description": "* Call it only with the queueName : **Returns the queue**.\n* Call it with queueName + callback : registers the callback in the queue. This\ncallback has a \"next\" parameter to launch the next callback in the queue. **Returns the cone to chain**.\n* Call it with queueName + array of callback to replace the queue. **Returns the cone to chain**",
            "itemtype": "method",
            "name": "queue",
            "params": [
                {
                    "name": "queueName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "use the next param like : `function(next, currentCone){ myCone.fadeOut().delay(1000).then(next); }`",
                    "type": "Function|Array<function>",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Cone|Array<function>"
            },
            "chainable": 1,
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 372,
            "description": "Adds callback to the last used queue",
            "itemtype": "method",
            "name": "then",
            "params": [
                {
                    "name": "callback",
                    "description": "`function(next){}`",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Cone"
            },
            "chainable": 1,
            "example": [
                " ```js\nvar myCone = new Cone(scene);\nmyCone\n  .fadeOut()\n  .fadeIn()\n  .delay(1000)\n  .widenEyes()\n  .unWidenEyes()\n  .then(function(next){myCone.setColor('#900000'); next()})\n  .bump();\n```"
            ],
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 397,
            "description": "Delays the next event in the queue of \"delay\" ms.\n\nYou can force the queue name.\n\nCan also be used without the `queueName` if you're alredy chaining on the right queue like : `myCone.fadeOut().delay(2000).fadeIn()`",
            "itemtype": "method",
            "name": "delay",
            "params": [
                {
                    "name": "queueName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "delay",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Cone"
            },
            "chainable": 1,
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 434,
            "description": "Clears the queue",
            "itemtype": "method",
            "name": "clearQueue",
            "params": [
                {
                    "name": "queueName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Cone"
            },
            "chainable": 1,
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 446,
            "description": "Clears all the queues",
            "itemtype": "method",
            "name": "clearQueues",
            "return": {
                "description": "",
                "type": "Cone"
            },
            "chainable": 1,
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 459,
            "description": "Stops all the animations on the fx queue then clears the queue\n(all other queues continue)",
            "itemtype": "method",
            "name": "flushAnimationQueue",
            "return": {
                "description": "",
                "type": "Cone"
            },
            "chainable": 1,
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 472,
            "description": "Returns cone position",
            "itemtype": "method",
            "name": "getPosition",
            "return": {
                "description": "",
                "type": "BABYLON.Vector3"
            },
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 481,
            "description": "Returns true if an fx animation is running",
            "itemtype": "method",
            "name": "isAnimationRunning",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 490,
            "description": "Returns true if the cone is widenning eyes",
            "itemtype": "method",
            "name": "isWidenningEyes",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 499,
            "description": "Returns true if the cone has its eyes widen",
            "itemtype": "method",
            "name": "isEyesWiden",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 508,
            "itemtype": "method",
            "name": "isBumping",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 515,
            "description": "Returns true if alpha is animating on the cone",
            "itemtype": "method",
            "name": "isChangingAlpha",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 524,
            "itemtype": "method",
            "name": "getMoveStep",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 531,
            "itemtype": "method",
            "name": "getTurnStep",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 538,
            "itemtype": "method",
            "name": "getHeight",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 545,
            "itemtype": "method",
            "name": "getTopDiameter",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 552,
            "itemtype": "method",
            "name": "getBottomDiameter",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 559,
            "itemtype": "method",
            "name": "getDistance",
            "params": [
                {
                    "name": "cone",
                    "description": "",
                    "type": "Cone"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 567,
            "description": "Checks if two cones intersect (based on the bottom diameter)\n\nIf a cone has been rescaled, it's taken account (although, if scaling x and z are different the bigger one is taken in account)",
            "itemtype": "method",
            "name": "intersectsCone",
            "params": [
                {
                    "name": "cone",
                    "description": "",
                    "type": "Cone"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 583,
            "itemtype": "method",
            "name": "intersectsGroundLimits",
            "params": [
                {
                    "name": "ground",
                    "description": "(plane)",
                    "type": "BABYLON.Mesh"
                },
                {
                    "name": "replace",
                    "description": "if you wan't not only to check the limit but also keep the cone inside it",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 618,
            "description": "* Attaches this cone to the one passed in parameter\n* If you try to tail a cone already followed by another, your cone will follow the last one in the tail\n* Returns the cone you end up tailing",
            "itemtype": "method",
            "name": "tail",
            "params": [
                {
                    "name": "cone",
                    "description": "",
                    "type": "Cone"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "distance",
                            "description": "By default the sum of the radiuses of the cones",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "Cone"
            },
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 652,
            "description": "Detaches your cone, returns the cone it was tailing",
            "itemtype": "method",
            "name": "unTail",
            "return": {
                "description": "",
                "type": "Cone"
            },
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 665,
            "description": "Returns the cone this cone is tailing (or false if none)",
            "itemtype": "method",
            "name": "tailingCone",
            "return": {
                "description": "",
                "type": "Boolean|Cone"
            },
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 674,
            "description": "Returns the cone this cone is tailed by (or false if none)",
            "itemtype": "method",
            "name": "tailedCone",
            "return": {
                "description": "",
                "type": "Boolean|Cone"
            },
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 683,
            "description": "Returns true if this cone is n a tail in a way or an other",
            "itemtype": "method",
            "name": "isTailRelated",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 697,
            "description": "Returns a Cone.List of the cones tailing this one",
            "itemtype": "method",
            "name": "getFullTail",
            "return": {
                "description": "",
                "type": "Cone.List"
            },
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 718,
            "description": "Registers the cone to a BABYLON.ShadowGenerator to be able to render shadows on the shadow map",
            "itemtype": "method",
            "name": "registerToShadowGenerator",
            "params": [
                {
                    "name": "shadowGenerator",
                    "description": "",
                    "type": "BABYLON.ShadowGenerator"
                }
            ],
            "return": {
                "description": "",
                "type": "Cone"
            },
            "chainable": 1,
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 733,
            "description": "Squints the eyes of one step\nReturns true if the eyes are not all squinted\nReturns false if they are and stop squint",
            "itemtype": "method",
            "name": "squint",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 751,
            "description": "Unsquints the eyes of one step\nReturns true if the eyes are not all unsquinted\nReturns false if they are and stop squint",
            "itemtype": "method",
            "name": "unSquint",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 769,
            "description": "Sets the color of the cylinder\nAccepts hexa or rgb color",
            "itemtype": "method",
            "name": "setColor",
            "params": [
                {
                    "name": "color",
                    "description": "",
                    "type": "String|object"
                }
            ],
            "return": {
                "description": "",
                "type": "Cone"
            },
            "chainable": 1,
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 785,
            "description": "Sets the scale on all the cone",
            "itemtype": "method",
            "name": "setScale",
            "params": [
                {
                    "name": "scale",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Cone"
            },
            "chainable": 1,
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 799,
            "description": "Sets the alpha on all the cone",
            "itemtype": "method",
            "name": "setAlpha",
            "params": [
                {
                    "name": "alpha",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Cone"
            },
            "chainable": 1,
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 813,
            "description": "Moves the cone forward of one moveStep",
            "itemtype": "method",
            "name": "moveForward",
            "return": {
                "description": "",
                "type": "Cone"
            },
            "chainable": 1,
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 824,
            "description": "Moves the cone backwards of one moveStep",
            "itemtype": "method",
            "name": "moveBack",
            "return": {
                "description": "",
                "type": "Cone"
            },
            "chainable": 1,
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 835,
            "description": "Moves the cone left of one moveStep",
            "itemtype": "method",
            "name": "moveLeft",
            "return": {
                "description": "",
                "type": "Cone"
            },
            "chainable": 1,
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 846,
            "description": "Moves the cone right of one moveStep",
            "itemtype": "method",
            "name": "moveRight",
            "return": {
                "description": "",
                "type": "Cone"
            },
            "chainable": 1,
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 857,
            "description": "Turns the cone left of one turnStep",
            "itemtype": "method",
            "name": "turnLeft",
            "return": {
                "description": "",
                "type": "Cone"
            },
            "chainable": 1,
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 868,
            "description": "Turns the cone right of one turnStep",
            "itemtype": "method",
            "name": "turnRight",
            "return": {
                "description": "",
                "type": "Cone"
            },
            "chainable": 1,
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 879,
            "description": "Stops all the fx animations",
            "itemtype": "method",
            "name": "stopAllAnimationsRunning",
            "return": {
                "description": "",
                "type": "Cone"
            },
            "chainable": 1,
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 899,
            "description": "Stops eyes fx animation",
            "itemtype": "method",
            "name": "stopWidenEyes",
            "return": {
                "description": "",
                "type": "Cone"
            },
            "chainable": 1,
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 912,
            "description": "Reset eyes to orginal scale and position",
            "itemtype": "method",
            "name": "resetWidenEyes",
            "return": {
                "description": "",
                "type": "Cone"
            },
            "chainable": 1,
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 926,
            "description": "Stops cylinder fx animation",
            "itemtype": "method",
            "name": "stopBump",
            "return": {
                "description": "",
                "type": "Cone"
            },
            "chainable": 1,
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 939,
            "description": "Reset cylinder to orginal scale and position",
            "itemtype": "method",
            "name": "resetBump",
            "return": {
                "description": "",
                "type": "Cone"
            },
            "chainable": 1,
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 951,
            "itemtype": "method",
            "name": "toggleBump",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Cone"
            },
            "chainable": 1,
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 966,
            "itemtype": "method",
            "name": "stopAnimateAlpha",
            "return": {
                "description": "",
                "type": "Cone"
            },
            "chainable": 1,
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 978,
            "itemtype": "method",
            "name": "setMoveStep",
            "params": [
                {
                    "name": "moveStep",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Cone"
            },
            "chainable": 1,
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 988,
            "itemtype": "method",
            "name": "setTurnStep",
            "params": [
                {
                    "name": "turnStep",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Cone"
            },
            "chainable": 1,
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 998,
            "itemtype": "method",
            "name": "lookAt",
            "params": [
                {
                    "name": "point",
                    "description": "",
                    "type": "BABYLON.Vector3|Cone"
                }
            ],
            "return": {
                "description": "",
                "type": "Cone"
            },
            "chainable": 1,
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 1012,
            "description": "Moves the cone towards \"point\" of one moveStep",
            "itemtype": "method",
            "name": "follow",
            "params": [
                {
                    "name": "point",
                    "description": "",
                    "type": "BABYLON.Vector3|Cone"
                },
                {
                    "name": "callback",
                    "description": "callback executed when the cone gets to point `function(point){}`",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Cone"
            },
            "chainable": 1,
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 1041,
            "description": "This method is used internally to expose methods that are used both on Cone and Cone.List\n\nYou will use it when you make your own plugins to expose your own methods",
            "itemtype": "method",
            "name": "addMethods",
            "params": [
                {
                    "name": "methodList",
                    "description": "List of the methods to add to the cone list prototype",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Undefined"
            },
            "static": 1,
            "example": [
                "\n```js\n//at the end of your file\nCone.addMethods(stateFullMethods);\nCone.List.addMethods(stateFullMethods);\n```"
            ],
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 1072,
            "description": "Widens the eyes of the cone (and more)\n\nCan also be run via the `.animate()` dispatcher",
            "itemtype": "method",
            "name": "widenEyes",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "speed",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "5"
                        },
                        {
                            "name": "loop",
                            "description": "3 possibilities :\n* `true` will loop the animation until you stop it\n* `false` will play the animation only once\n* a number will play the animation a number of times",
                            "type": "Boolean|number",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "callback",
                            "description": "will run your callback at the end of the animation : `function(cone){}`",
                            "type": "Function",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "delay",
                            "description": "Delay between the end of the animation and the execution of the callback (and potentionally the next animation in the queue)",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "break",
                            "description": "If true cancels all animations in the queue before running this one",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "full",
                            "description": "If true, runs the full animation (openning and closing eyes)",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "close",
                            "description": "If true, runs only the close eyes part of the animation (by default, only opens eyes)",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "Cone"
            },
            "chainable": 1,
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 1150,
            "description": "Unwidens the eyes of the cone (and more)\n\nCan also be run via the `.animate()` dispatcher",
            "itemtype": "method",
            "name": "unWidenEyes",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "speed",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "5"
                        },
                        {
                            "name": "loop",
                            "description": "3 possibilities :\n* `true` will loop the animation until you stop it\n* `false` will play the animation only once\n* a number will play the animation a number of times",
                            "type": "Boolean|number",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "callback",
                            "description": "will run your callback at the end of the animation : `function(cone){}`",
                            "type": "Function",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "delay",
                            "description": "Delay between the end of the animation and the execution of the callback (and potentionally the next animation in the queue)",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "break",
                            "description": "If true cancels all animations in the queue before running this one",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "full",
                            "description": "If true, runs the full animation (openning and closing eyes)",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "close",
                            "description": "If true, runs only the close eyes part of the animation (by default, does that on unWidenEyes)",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "Cone"
            },
            "chainable": 1,
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 1175,
            "description": "Bumps the cone\n\nCan also be run via the `.animate()` dispatcher",
            "itemtype": "method",
            "name": "bump",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "scale",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1.2"
                        },
                        {
                            "name": "speed",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "3"
                        },
                        {
                            "name": "loop",
                            "description": "3 possibilities :\n* `true` will loop the animation until you stop it\n* `false` will play the animation only once\n* a number will play the animation a number of times",
                            "type": "Boolean|number",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "callback",
                            "description": "will run your callback at the end of the animation : `function(cone){}`",
                            "type": "Function",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "delay",
                            "description": "Delay between the end of the animation and the execution of the callback (and potentionally the next animation in the queue)",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "break",
                            "description": "If true cancels all animations in the queue before running this one",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "Cone"
            },
            "chainable": 1,
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 1232,
            "description": "Animates the alpha of the cone\n\nCan also be run via the `.animate()` dispatcher",
            "itemtype": "method",
            "name": "animateAlpha",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "alpha",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "speed",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "3"
                        },
                        {
                            "name": "loop",
                            "description": "3 possibilities :\n* `true` will loop the animation until you stop it\n* `false` will play the animation only once\n* a number will play the animation a number of times",
                            "type": "Boolean|number",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "callback",
                            "description": "will run your callback at the end of the animation : `function(cone){}`",
                            "type": "Function",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "delay",
                            "description": "Delay between the end of the animation and the execution of the callback (and potentionally the next animation in the queue)",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "break",
                            "description": "If true cancels all animations in the queue before running this one",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "cylinder",
                            "description": "True by default, if false, won't be affected",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "leftEye",
                            "description": "True by default, if false, won't be affected",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "rightEye",
                            "description": "True by default, if false, won't be affected",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "Cone"
            },
            "chainable": 1,
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 1318,
            "description": "Animates the scale of the cone\n\nCan also be run via the `.animate()` dispatcher",
            "itemtype": "method",
            "name": "animateScale",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "scale",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "speed",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "3"
                        },
                        {
                            "name": "loop",
                            "description": "3 possibilities :\n* `true` will loop the animation until you stop it\n* `false` will play the animation only once\n* a number will play the animation a number of times",
                            "type": "Boolean|number",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "callback",
                            "description": "will run your callback at the end of the animation : `function(cone){}`",
                            "type": "Function",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "delay",
                            "description": "Delay between the end of the animation and the execution of the callback (and potentionally the next animation in the queue)",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "break",
                            "description": "If true cancels all animations in the queue before running this one",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "Cone"
            },
            "chainable": 1,
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 1373,
            "description": "Animates the color of the cylinder of the cone\n\nCan also be run via the `.animate()` dispatcher\n\n**Does not work for the moment**",
            "todo": [
                "Does not work for the moment"
            ],
            "itemtype": "method",
            "name": "animateColor",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "color",
                            "description": "",
                            "type": "Number"
                        },
                        {
                            "name": "speed",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "3"
                        },
                        {
                            "name": "loop",
                            "description": "3 possibilities :\n* `true` will loop the animation until you stop it\n* `false` will play the animation only once\n* a number will play the animation a number of times",
                            "type": "Boolean|number",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "callback",
                            "description": "will run your callback at the end of the animation : `function(cone){}`",
                            "type": "Function",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "delay",
                            "description": "Delay between the end of the animation and the execution of the callback (and potentionally the next animation in the queue)",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "break",
                            "description": "If true cancels all animations in the queue before running this one",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "Cone"
            },
            "chainable": 1,
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 1437,
            "description": "Shortcut for animateAlpha(), from the current alpha to alpha=1\n\nCan also be run via the `.animate()` dispatcher",
            "itemtype": "method",
            "name": "fadeIn",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "speed",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "3"
                        },
                        {
                            "name": "loop",
                            "description": "3 possibilities :\n* `true` will loop the animation until you stop it\n* `false` will play the animation only once\n* a number will play the animation a number of times",
                            "type": "Boolean|number",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "callback",
                            "description": "will run your callback at the end of the animation : `function(cone){}`",
                            "type": "Function",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "delay",
                            "description": "Delay between the end of the animation and the execution of the callback (and potentionally the next animation in the queue)",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "break",
                            "description": "If true cancels all animations in the queue before running this one",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "cylinder",
                            "description": "True by default, if false, won't be affected",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "leftEye",
                            "description": "True by default, if false, won't be affected",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "rightEye",
                            "description": "True by default, if false, won't be affected",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "Cone"
            },
            "chainable": 1,
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 1463,
            "description": "Shortcut for animateAlpha(), from the current alpha to alpha=0\n\nCan also be run via the `.animate()` dispatcher",
            "itemtype": "method",
            "name": "fadeOut",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "speed",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "3"
                        },
                        {
                            "name": "loop",
                            "description": "3 possibilities :\n* `true` will loop the animation until you stop it\n* `false` will play the animation only once\n* a number will play the animation a number of times",
                            "type": "Boolean|number",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "callback",
                            "description": "will run your callback at the end of the animation : `function(cone){}`",
                            "type": "Function",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "delay",
                            "description": "Delay between the end of the animation and the execution of the callback (and potentionally the next animation in the queue)",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "break",
                            "description": "If true cancels all animations in the queue before running this one",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "cylinder",
                            "description": "True by default, if false, won't be affected",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "leftEye",
                            "description": "True by default, if false, won't be affected",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "rightEye",
                            "description": "True by default, if false, won't be affected",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "Cone"
            },
            "chainable": 1,
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 1491,
            "description": "Let's your cone move to a position.\n\nCan also be run via the `.animate()` dispatcher",
            "itemtype": "method",
            "name": "moveTo",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "position",
                            "description": "",
                            "type": "Cone|BABYLON.Vector3|Object"
                        },
                        {
                            "name": "callback",
                            "description": "will run your callback at the end of the animation : `function(cone){}`",
                            "type": "Function",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "delay",
                            "description": "Delay between the end of the animation and the execution of the callback (and potentionally the next animation in the queue)",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "break",
                            "description": "If true cancels all animations in the queue before running this one (`.moveTo()` is on the `move` queue, not the `fx` queue as the other animations, so you can run them in parallel of moveTo)",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "Cone"
            },
            "chainable": 1,
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 1535,
            "description": "Run any animate methods such as :\n\n* animateAlpha\n* animateScale\n* bump\n* fadeIn\n* fadeOut\n* unWidenEyes\n* widenEyes\n* moveTo\n\nJust specify it in `options.method`. Those methods are also accessible directly via shorcuts on the {{#crossLink \"Cone\"}}Cone{{/crossLink}} instance.",
            "itemtype": "method",
            "name": "animate",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "method",
                            "description": "",
                            "type": "String"
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "Cone"
            },
            "chainable": 1,
            "example": [
                " ```js\n//you can use the .animate() dispatcher as well as the shortcuts, directly on a cone instance :\nvar myCone = new Cone(scene);\nmyCone\n  .fadeOut()\n  .fadeIn()\n  .delay(1000)\n  .widenEyes()\n  .unWidenEyes()\n  .then(function(next){myCone.setColor('#900000'); next()})\n  .bump();\n```"
            ],
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 1615,
            "itemtype": "method",
            "name": "animationMethodExists",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "methodName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 1626,
            "itemtype": "method",
            "name": "getAnimationMethodQueueName",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "methodName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean|string"
            },
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 1642,
            "description": "this method is inpired by http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb",
            "itemtype": "method",
            "name": "hexToRgb",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "hex",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 1659,
            "itemtype": "method",
            "name": "isRgb",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "color",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 1672,
            "itemtype": "method",
            "name": "removeAllAnimations",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "cone",
                    "description": "",
                    "type": "Cone"
                }
            ],
            "return": {
                "description": "",
                "type": "Undefined"
            },
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 1686,
            "itemtype": "method",
            "name": "addBumpAnimation",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "cone",
                    "description": "",
                    "type": "Cone"
                },
                {
                    "name": "scale",
                    "description": "description",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Undefined"
            },
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 1713,
            "itemtype": "method",
            "name": "removeBumpAnimation",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "cone",
                    "description": "",
                    "type": "Cone"
                }
            ],
            "return": {
                "description": "",
                "type": "Undefined"
            },
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 1723,
            "itemtype": "method",
            "name": "addWidenEyesAnimation",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "cone",
                    "description": "",
                    "type": "Cone"
                }
            ],
            "return": {
                "description": "",
                "type": "Undefined"
            },
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 1782,
            "itemtype": "method",
            "name": "removeWidenEyesAnimation",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "cone",
                    "description": "",
                    "type": "Cone"
                }
            ],
            "return": {
                "description": "",
                "type": "Undefined"
            },
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 1794,
            "itemtype": "method",
            "name": "addAlphaAnimation",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "cone",
                    "description": "",
                    "type": "Cone"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Undefined"
            },
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 1850,
            "itemtype": "method",
            "name": "removeAlphaAnimation",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "cone",
                    "description": "",
                    "type": "Cone"
                }
            ],
            "return": {
                "description": "",
                "type": "Undefined"
            },
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 1862,
            "itemtype": "method",
            "name": "addScaleAnimation",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "cone",
                    "description": "",
                    "type": "Cone"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Undefined"
            },
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 1912,
            "itemtype": "method",
            "name": "removeScaleAnimation",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "cone",
                    "description": "",
                    "type": "Cone"
                }
            ],
            "return": {
                "description": "",
                "type": "Undefined"
            },
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 1924,
            "todo": [
                "still under development"
            ],
            "itemtype": "method",
            "name": "addColorAnimation",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "cone",
                    "description": "",
                    "type": "Cone"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Undefined"
            },
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 1949,
            "itemtype": "method",
            "name": "removeColorAnimation",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "cone",
                    "description": "",
                    "type": "Cone"
                }
            ],
            "return": {
                "description": "",
                "type": "Undefined"
            },
            "class": "Cone",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 1967,
            "itemtype": "method",
            "name": "getAnimationNamesFromMesh",
            "static": 1,
            "params": [
                {
                    "name": "mesh",
                    "description": "",
                    "type": "BABYLON.Mesh"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Cone.helpers",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 1979,
            "itemtype": "method",
            "name": "isAnimationRegistered",
            "static": 1,
            "params": [
                {
                    "name": "mesh",
                    "description": "",
                    "type": "BABYLON.Mesh"
                },
                {
                    "name": "animationName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Cone.helpers",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 1989,
            "description": "Removes the animation from the mesh\n\nreturns true if the animation was removed / false if there was no animation to remove",
            "itemtype": "method",
            "name": "removeAnimationFromMesh",
            "static": 1,
            "params": [
                {
                    "name": "mesh",
                    "description": "",
                    "type": "BABYLON.Mesh"
                },
                {
                    "name": "animationName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Cone.helpers",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 2008,
            "description": "Clone object (simple, not deep reccursive)",
            "itemtype": "method",
            "name": "cloneObject",
            "static": 1,
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Cone.helpers",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 2058,
            "description": "Loops through the cone list providing a callback like `function(cone, index){}`\n\nReturn false in the callback to stop the loop",
            "itemtype": "method",
            "name": "each",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Cone.List"
            },
            "chainable": 1,
            "class": "Cone.List",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 2079,
            "description": "Run any animate methods such as :\n\n* animateAlpha\n* animateScale\n* bump\n* fadeIn\n* fadeOut\n* unWidenEyes\n* widenEyes\n* moveTo\n\nJust specify it in `options.method`. Those methods are also accessible via the same shortcuts like you would use on a {{#crossLink \"Cone\"}}Cone{{/crossLink}} instance.",
            "itemtype": "method",
            "name": "animate",
            "params": [
                {
                    "name": "options",
                    "description": "same options as the ones on the cone for each animation method",
                    "type": "Object",
                    "props": [
                        {
                            "name": "method",
                            "description": "",
                            "type": "String"
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "Cone.List"
            },
            "chainable": 1,
            "example": [
                " ```js\n//you can use the .animate() dispatcher as well as the shortcuts, directly on a conelist :\nvar myConeList = new ConeList([myCone1,myCone2,myCone3]);\nmyConeList\n  .fadeOut()\n  .fadeIn()\n  .delay(1000)\n  .widenEyes()\n  .unWidenEyes()\n  .then(function(next){myConeList.setColor('#900000'); next()})\n  .bump();\n```"
            ],
            "class": "Cone.List",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 2145,
            "itemtype": "method",
            "name": "changeStateDispatcher",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "coneList",
                    "description": "",
                    "type": "Cone.List"
                },
                {
                    "name": "methodName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "args",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Cone.List"
            },
            "class": "Cone.List",
            "module": "Cone"
        },
        {
            "file": "src\\js\\vendor\\Cone\\Cone.js",
            "line": 2159,
            "description": "This method is used internally to expose methods that are used both on Cone and Cone.List\n\nYou will use it when you make your own plugins to expose your own methods",
            "itemtype": "method",
            "name": "addMethods",
            "params": [
                {
                    "name": "methodList",
                    "description": "List of the methods to add to the cone list prototype",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Undefined"
            },
            "static": 1,
            "example": [
                "\n```js\n//at the end of your file\nCone.addMethods(stateFullMethods);\nCone.List.addMethods(stateFullMethods);\n```"
            ],
            "class": "Cone.List",
            "module": "Cone"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\js\\vendor\\Cone\\Cone.js:665"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\js\\vendor\\Cone\\Cone.js:674"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\js\\vendor\\Cone\\Cone.js:785"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\js\\vendor\\Cone\\Cone.js:1041"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\js\\vendor\\Cone\\Cone.js:2159"
        }
    ]
}